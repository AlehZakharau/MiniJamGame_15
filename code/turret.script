local model = require("code/game_model")

function init(self)
    model.ammo = model.ammo_max
    msg.post(".", "acquire_input_focus")
end

---rotate_turret
---@param dir vector3 difference between two vectors
local function rotate_turret(dir)
    local angle = math.atan2(-dir.x, dir.y)
    local a = vmath.quat_rotation_z(angle)
    go.set(".", "rotation", a)
end

local function find_aim_pos(action)
    local mouse_pos = vmath.vector3(action.x, action.y, 0)
    local adjust_aim = vmath.vector3(269, -328, 0)
    local aim_pos = mouse_pos + adjust_aim
    return aim_pos;
end

local function shoot()
    if model.ammo > 0 and model.had_shoot == false then
        print("shoot" .. model.ammo)
        model.ammo = model.ammo - 1
        model.had_shoot = true
        timer.delay(model.shoot_delay, false, model.cooldown)
    elseif model.ammo <= 0 then
        print("no ammo reload")
    else
        print("to hot")
    end
end

local function reload()
    if model.had_reload == false then
        model.had_reload = true
        timer.delay(model.reload_time, false, model.reload)
    else
        print(" already reloading")
    end
end

function on_input(self, action_id, action)

    if action.x and action.y then
        local aim_pos = find_aim_pos(action)
        go.set_position(aim_pos, "/aim")

        local pos = go.get_position()
        rotate_turret(aim_pos - pos)
    end
    if action_id == hash("touch") then
        shoot()
    end
    if action_id == hash("reload") then
        reload()
    end

end

function on_reload(self)
    model.ammo = model.ammo_max
end
